%!PS-Adobe-2.0 EPSF-2.0
%%Title: fig4_06.pstex
%%Creator: fig2dev Version 3.2 Patchlevel 1
%%CreationDate: Tue Nov 14 12:30:39 2000
%%For: herbst@vivaldi (Fr. Herbst)
%%Orientation: Portrait
%%BoundingBox: 0 0 264 111
%%Pages: 0
%%BeginSetup
%%EndSetup
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
-39.0 151.0 translate
1 -1 scale
.9 .9 scale % to make patterns same scale as in xfig

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index show		% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proe char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 32 32 true [ 32 0 0 -32 0 32 ]
	{<010101010202020204040404080808081010101020202020
	404040408080808001010101020202020404040408080808
	101010102020202040404040808080800101010102020202
	040404040808080810101010202020204040404080808080
	010101010202020204040404080808081010101020202020
	4040404080808080>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def
1.1111 1.1111 scale %restore scale

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def
%%EndProlog

$F2psBegin
10 setmiterlimit
n -1000 3396 m -1000 -1000 l 5807 -1000 l 5807 3396 l cp clip
 0.06299 0.06299 sc
% Polyline
7.500 slw
n 3515 1005 m 3635 845 l 3635 850 l gs col0 s gr 
% Polyline
n 805 1095 m 807 1095 l 810 1094 l 817 1092 l 827 1089 l 840 1085 l
 858 1081 l 879 1075 l 903 1069 l 929 1063 l 958 1056 l
 988 1049 l 1018 1042 l 1049 1036 l 1080 1030 l 1110 1025 l
 1141 1021 l 1171 1017 l 1202 1014 l 1233 1012 l 1266 1011 l
 1300 1010 l 1325 1010 l 1351 1010 l 1378 1011 l 1406 1012 l
 1435 1014 l 1466 1015 l 1497 1018 l 1529 1020 l 1561 1023 l
 1595 1026 l 1629 1029 l 1663 1033 l 1699 1037 l 1734 1040 l
 1770 1044 l 1806 1048 l 1842 1052 l 1878 1056 l 1914 1060 l
 1950 1064 l 1986 1067 l 2022 1071 l 2058 1074 l 2093 1076 l
 2128 1079 l 2163 1081 l 2197 1083 l 2231 1084 l 2265 1085 l
 2298 1085 l 2332 1085 l 2365 1085 l 2398 1084 l 2432 1083 l
 2465 1082 l 2499 1080 l 2533 1078 l 2567 1075 l 2602 1072 l
 2637 1069 l 2672 1065 l 2707 1061 l 2743 1057 l 2779 1052 l
 2815 1048 l 2851 1043 l 2887 1038 l 2923 1033 l 2959 1028 l
 2995 1023 l 3030 1018 l 3065 1013 l 3099 1009 l 3134 1005 l
 3167 1001 l 3200 997 l 3232 993 l 3263 990 l 3293 988 l
 3323 985 l 3351 983 l 3378 982 l 3405 981 l 3430 980 l
 3465 979 l 3498 980 l 3531 981 l 3562 982 l 3594 985 l
 3626 988 l 3658 992 l 3690 997 l 3723 1002 l 3755 1007 l
 3787 1013 l 3817 1018 l 3845 1024 l 3871 1029 l 3893 1033 l
 3912 1037 l 3927 1040 l 3937 1042 l 3944 1044 l 3948 1045 l
 3950 1045 l gs col0 s gr 
% Polyline
15.000 slw
n 810 1400 m 3953 1400 l 3953 1745 l 810 1745 l cp gs col7 0.85 shd ef gr gs col0 s gr 
% Polyline
7.500 slw
gs  clippath
3853 2237 m 3943 2259 l 3853 2282 l 3958 2282 l 3958 2237 l cp
898 2282 m 808 2259 l 898 2237 l 793 2237 l 793 2282 l cp
clip
n 808 2259 m 3943 2259 l gs col-1 s gr gr

% arrowhead
n 898 2282 m 808 2259 l 898 2237 l 898 2259 l 898 2282 l  cp gs 0.00 setgray ef gr  col-1 s
% arrowhead
n 3853 2237 m 3943 2259 l 3853 2282 l 3853 2259 l 3853 2237 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
 [90 45 15 45] 0 sd
n 1555 1565 m 3950 1570 l gs col-1 s gr  [] 0 sd
% Polyline
0.000 slw
n 628 1960 m 785 1960 l 785 1235 l 628 1235 l cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 41.87 82.33] PATmp PATsp ef gr PATusp 
% Polyline
15.000 slw
n 810 1830 m 810 1400 l gs col-1 s gr 
% Polyline
7.500 slw
n 3958 2164 m 3958 2374 l gs col-1 s gr 
% Polyline
n 805 2195 m 803 2384 l gs col-1 s gr 
% Polyline
0.000 slw
n 2198 2149 m 2658 2149 l 2658 2319 l 2198 2319 l cp gs col7 1.00 shd ef gr 
% Polyline
7.500 slw
gs  clippath
1223 1548 m 1323 1570 l 1223 1593 l 1338 1593 l 1338 1548 l cp
clip
n 1323 1570 m 847 1570 l gs col-1 s gr gr

% arrowhead
n 1223 1548 m 1323 1570 l 1223 1593 l 1223 1570 l 1223 1548 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
828 2048 m 805 2148 l 783 2048 l 783 2163 l 828 2163 l cp
clip
n 805 2148 m 805 1672 l gs col-1 s gr gr

% arrowhead
n 828 2048 m 805 2148 l 783 2048 l 805 2048 l 828 2048 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
839 1263 m 809 1383 l 779 1263 l 779 1413 l 839 1413 l cp
clip
n 809 1383 m 810 1095 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 839 1263 m 809 1383 l 779 1263 l 809 1263 l 839 1263 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
3987 1269 m 3955 1389 l 3927 1269 l 3925 1419 l 3985 1419 l cp
clip
n 3955 1389 m 3960 1050 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 3987 1269 m 3955 1389 l 3927 1269 l 3957 1269 l 3987 1269 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
3719 1265 m 3689 1385 l 3659 1265 l 3659 1415 l 3719 1415 l cp
clip
n 3689 1385 m 3690 980 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 3719 1265 m 3689 1385 l 3659 1265 l 3689 1265 l 3719 1265 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
3446 1255 m 3416 1375 l 3386 1255 l 3386 1405 l 3446 1405 l cp
clip
n 3416 1375 m 3415 985 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 3446 1255 m 3416 1375 l 3386 1255 l 3416 1255 l 3446 1255 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
3171 1260 m 3142 1380 l 3111 1260 l 3112 1410 l 3172 1410 l cp
clip
n 3142 1380 m 3140 1000 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 3171 1260 m 3142 1380 l 3111 1260 l 3141 1260 l 3171 1260 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
2866 1255 m 2836 1375 l 2806 1255 l 2806 1405 l 2866 1405 l cp
clip
n 2836 1375 m 2835 1055 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 2866 1255 m 2836 1375 l 2806 1255 l 2836 1255 l 2866 1255 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
1156 1268 m 1127 1388 l 1096 1268 l 1097 1418 l 1157 1418 l cp
clip
n 1127 1388 m 1125 1010 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 1156 1268 m 1127 1388 l 1096 1268 l 1126 1268 l 1156 1268 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
1455 1263 m 1426 1383 l 1395 1263 l 1396 1413 l 1456 1413 l cp
clip
n 1426 1383 m 1423 1027 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 1455 1263 m 1426 1383 l 1395 1263 l 1425 1263 l 1455 1263 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
1736 1265 m 1706 1385 l 1676 1265 l 1676 1415 l 1736 1415 l cp
clip
n 1706 1385 m 1705 1020 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 1736 1265 m 1706 1385 l 1676 1265 l 1706 1265 l 1736 1265 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
2011 1266 m 1979 1385 l 1951 1264 l 1948 1414 l 2008 1416 l cp
clip
n 1979 1385 m 1985 1075 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 2011 1266 m 1979 1385 l 1951 1264 l 1981 1265 l 2011 1266 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
2291 1263 m 2261 1383 l 2231 1263 l 2231 1413 l 2291 1413 l cp
clip
n 2261 1383 m 2260 1080 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 2291 1263 m 2261 1383 l 2231 1263 l 2261 1263 l 2291 1263 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
2575 1264 m 2545 1384 l 2515 1264 l 2515 1414 l 2575 1414 l cp
clip
n 2545 1384 m 2545 1080 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 2575 1264 m 2545 1384 l 2515 1264 l 2545 1264 l 2575 1264 l  cp gs 0.00 setgray ef gr  col-1 s
% Arc
15.000 slw
gs n 4084.2 1599.3 181.9 -52.5 92.6 arc
gs col0 s gr
 gr

% Polyline
gs  clippath
4173 1496 m 4060 1370 l 4216 1435 l 4057 1322 l 4014 1383 l cp
clip
n 4215 1480 m 4060 1370 l gs col0 s gr gr

% arrowhead
7.500 slw
n 4173 1496 m 4060 1370 l 4216 1435 l 4195 1465 l 4173 1496 l  cp gs 0.00 setgray ef gr  col0 s
15.000 slw
% Ellipse
n 803 1569 25 25 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 3948 1564 25 25 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Polyline
gs  clippath
4000 1918 m 3955 2098 l 3910 1918 l 3910 2128 l 4000 2128 l cp
clip
n 3955 1619 m 3955 2098 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 4000 1918 m 3955 2098 l 3910 1918 l 3955 1918 l 4000 1918 l  cp gs 0.00 setgray ef gr  col-1 s
$F2psEnd
rs
end
