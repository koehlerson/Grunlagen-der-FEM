%!PS-Adobe-2.0 EPSF-2.0
%%Title: fig4_06.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Apr 25 12:04:43 2007
%%For: keip@mech110-13 (Marc Keip)
%%BoundingBox: 0 0 233 109
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 109 moveto 0 0 lineto 233 0 lineto 233 109 lineto closepath clip newpath
-39.5 150.9 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 100
% Polyline
7.500 slw
n 3515 1005 m 3635 845 l
 3635 850 l gs col0 s gr 
% Polyline
2 slj
n 805 1095 m 806 1095 l 807 1094 l 809 1092 l 813 1089 l 819 1086 l
 826 1081 l 836 1076 l 847 1071 l 860 1065 l 875 1059 l
 893 1053 l 913 1046 l 936 1040 l 962 1035 l 993 1030 l
 1028 1025 l 1069 1020 l 1116 1016 l 1170 1013 l 1232 1011 l
 1300 1010 l 1350 1010 l 1399 1011 l 1448 1012 l 1494 1013 l
 1537 1015 l 1576 1017 l 1611 1020 l 1642 1023 l 1669 1026 l
 1692 1029 l 1713 1032 l 1730 1035 l 1746 1039 l 1760 1042 l
 1773 1046 l 1785 1049 l 1798 1053 l 1811 1056 l 1826 1059 l
 1842 1063 l 1862 1066 l 1885 1069 l 1911 1072 l 1942 1075 l
 1978 1078 l 2019 1080 l 2065 1082 l 2117 1084 l 2173 1085 l
 2234 1086 l 2299 1086 l 2365 1085 l 2431 1084 l 2496 1082 l
 2557 1079 l 2613 1077 l 2665 1074 l 2711 1070 l 2752 1067 l
 2787 1063 l 2818 1060 l 2845 1056 l 2867 1052 l 2886 1048 l
 2903 1045 l 2918 1041 l 2931 1037 l 2943 1033 l 2955 1030 l
 2968 1026 l 2981 1022 l 2997 1018 l 3014 1014 l 3035 1011 l
 3058 1007 l 3085 1003 l 3116 999 l 3151 996 l 3191 992 l
 3234 989 l 3280 986 l 3329 984 l 3380 982 l 3430 980 l
 3499 979 l 3562 979 l 3618 980 l 3667 982 l 3709 985 l
 3746 989 l 3778 993 l 3806 997 l 3830 1002 l 3852 1007 l
 3871 1013 l 3888 1018 l 3903 1023 l 3915 1028 l 3926 1033 l
 3934 1037 l 3940 1040 l 3945 1042 l 3948 1044 l 3949 1045 l

 3950 1045 l gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 10
% Polyline
15.000 slw
n 810 1400 m 3953 1400 l 3953 1745 l 810 1745 l
 cp gs col7 0.85 shd ef gr gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 3
% Polyline
7.500 slw
 [90 45 15 45] 0 sd
n 1555 1565 m
 3950 1570 l gs col-1 s gr  [] 0 sd
% Polyline
0.000 slw
n 628 1960 m 785 1960 l 785 1235 l 628 1235 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 41.87 82.33] PATmp PATsp ef gr PATusp 
% Polyline
7.500 slw
gs  clippath
3958 2281 m 3958 2236 l 3837 2236 l 3927 2259 l 3837 2281 l cp
793 2236 m 793 2281 l 914 2281 l 824 2259 l 914 2236 l cp
eoclip
n 808 2259 m
 3943 2259 l gs col-1 s gr gr

% arrowhead
n 914 2236 m 824 2259 l 914 2281 l 914 2236 l  cp gs 0.00 setgray ef gr  col-1 s
% arrowhead
n 3837 2281 m 3927 2259 l 3837 2236 l 3837 2281 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
n 810 1830 m
 810 1400 l gs col-1 s gr 
% Polyline
7.500 slw
n 3958 2164 m
 3958 2374 l gs col-1 s gr 
% Polyline
n 805 2195 m
 803 2384 l gs col-1 s gr 
% Polyline
gs  clippath
1338 1592 m 1338 1547 l 1205 1547 l 1305 1570 l 1205 1592 l cp
eoclip
n 1323 1570 m
 847 1570 l gs col-1 s gr gr

% arrowhead
n 1205 1592 m 1305 1570 l 1205 1547 l 1205 1592 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
782 2163 m 827 2163 l 827 2030 l 805 2130 l 782 2030 l cp
eoclip
n 805 2148 m
 805 1672 l gs col-1 s gr gr

% arrowhead
n 782 2030 m 805 2130 l 827 2030 l 782 2030 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
778 1397 m 838 1398 l 839 1247 l 809 1367 l 779 1246 l cp
eoclip
n 809 1383 m
 810 1095 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 779 1246 m 809 1367 l 839 1247 l 779 1246 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
3924 1403 m 3984 1404 l 3986 1253 l 3955 1373 l 3926 1252 l cp
eoclip
n 3955 1389 m
 3960 1050 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 3926 1252 m 3955 1373 l 3986 1253 l 3926 1252 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
3658 1399 m 3718 1400 l 3719 1249 l 3689 1369 l 3659 1248 l cp
eoclip
n 3689 1385 m
 3690 980 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 3659 1248 m 3689 1369 l 3719 1249 l 3659 1248 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
3386 1390 m 3446 1389 l 3445 1238 l 3416 1359 l 3385 1239 l cp
eoclip
n 3416 1375 m
 3415 985 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 3385 1239 m 3416 1359 l 3445 1238 l 3385 1239 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
3112 1395 m 3172 1394 l 3171 1243 l 3142 1364 l 3111 1244 l cp
eoclip
n 3142 1380 m
 3140 1000 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 3111 1244 m 3142 1364 l 3171 1243 l 3111 1244 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
2806 1390 m 2866 1389 l 2865 1238 l 2836 1359 l 2805 1239 l cp
eoclip
n 2836 1375 m
 2835 1055 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 2805 1239 m 2836 1359 l 2865 1238 l 2805 1239 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
1097 1403 m 1157 1402 l 1156 1251 l 1127 1372 l 1096 1252 l cp
eoclip
n 1127 1388 m
 1125 1010 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 1096 1252 m 1127 1372 l 1156 1251 l 1096 1252 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
1396 1398 m 1456 1397 l 1454 1246 l 1426 1367 l 1394 1247 l cp
eoclip
n 1426 1383 m
 1423 1027 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 1394 1247 m 1426 1367 l 1454 1246 l 1394 1247 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
1676 1400 m 1736 1399 l 1735 1248 l 1706 1369 l 1675 1249 l cp
eoclip
n 1706 1385 m
 1705 1020 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 1675 1249 m 1706 1369 l 1735 1248 l 1675 1249 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
1948 1399 m 2008 1400 l 2011 1249 l 1979 1369 l 1951 1248 l cp
eoclip
n 1979 1385 m
 1985 1075 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 1951 1248 m 1979 1369 l 2011 1249 l 1951 1248 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
2231 1398 m 2291 1397 l 2290 1246 l 2261 1367 l 2230 1247 l cp
eoclip
n 2261 1383 m
 2260 1080 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 2230 1247 m 2261 1367 l 2290 1246 l 2230 1247 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
15.000 slw
gs  clippath
2515 1399 m 2575 1399 l 2575 1248 l 2545 1368 l 2515 1248 l cp
eoclip
n 2545 1384 m
 2545 1080 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 2515 1248 m 2545 1368 l 2575 1248 l 2515 1248 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
0.000 slw
n 2198 2149 m 2658 2149 l 2658 2319 l 2198 2319 l
 cp gs col7 1.00 shd ef gr 
% Arc
15.000 slw
n 4084.2 1599.3 181.9 -52.5 92.6 arc
gs col0 s gr

% Polyline
gs  clippath
4069 1330 m 4026 1391 l 4186 1506 l 4074 1380 l 4230 1444 l cp
eoclip
n 4215 1480 m
 4060 1370 l gs col0 s gr gr

% arrowhead
7.500 slw
n 4230 1444 m 4074 1380 l 4186 1506 l 4230 1444 l  cp gs 0.00 setgray ef gr  col0 s
% Ellipse
15.000 slw
n 803 1569 25 25 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Ellipse
n 3948 1564 25 25 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Polyline
gs  clippath
3910 2113 m 4000 2113 l 4000 1902 l 3955 2082 l 3910 1902 l cp
eoclip
n 3955 1619 m
 3955 2098 l gs col-1 s gr gr

% arrowhead
7.500 slw
n 3910 1902 m 3955 2082 l 4000 1902 l 3910 1902 l  cp gs 0.00 setgray ef gr  col-1 s
% here ends figure;
$F2psEnd
rs
end
showpage
