%!PS-Adobe-2.0 EPSF-2.0
%%Title: ten102.fig
%%Creator: fig2dev Version 3.2 Patchlevel 4
%%CreationDate: Wed Oct  5 12:43:14 2005
%%For: jorisch@mech110-11 (Veronika Jorisch)
%%BoundingBox: 0 0 260 111
%%Magnification: 1.0000
%%EndComments
/MyAppDict 100 dict dup begin def
/$F2psDict 200 dict def
$F2psDict begin
$F2psDict /mtrx matrix put
/col-1 {0 setgray} bind def
/col0 {0.000 0.000 0.000 srgb} bind def
/col1 {0.000 0.000 1.000 srgb} bind def
/col2 {0.000 1.000 0.000 srgb} bind def
/col3 {0.000 1.000 1.000 srgb} bind def
/col4 {1.000 0.000 0.000 srgb} bind def
/col5 {1.000 0.000 1.000 srgb} bind def
/col6 {1.000 1.000 0.000 srgb} bind def
/col7 {1.000 1.000 1.000 srgb} bind def
/col8 {0.000 0.000 0.560 srgb} bind def
/col9 {0.000 0.000 0.690 srgb} bind def
/col10 {0.000 0.000 0.820 srgb} bind def
/col11 {0.530 0.810 1.000 srgb} bind def
/col12 {0.000 0.560 0.000 srgb} bind def
/col13 {0.000 0.690 0.000 srgb} bind def
/col14 {0.000 0.820 0.000 srgb} bind def
/col15 {0.000 0.560 0.560 srgb} bind def
/col16 {0.000 0.690 0.690 srgb} bind def
/col17 {0.000 0.820 0.820 srgb} bind def
/col18 {0.560 0.000 0.000 srgb} bind def
/col19 {0.690 0.000 0.000 srgb} bind def
/col20 {0.820 0.000 0.000 srgb} bind def
/col21 {0.560 0.000 0.560 srgb} bind def
/col22 {0.690 0.000 0.690 srgb} bind def
/col23 {0.820 0.000 0.820 srgb} bind def
/col24 {0.500 0.190 0.000 srgb} bind def
/col25 {0.630 0.250 0.000 srgb} bind def
/col26 {0.750 0.380 0.000 srgb} bind def
/col27 {1.000 0.500 0.500 srgb} bind def
/col28 {1.000 0.630 0.630 srgb} bind def
/col29 {1.000 0.750 0.750 srgb} bind def
/col30 {1.000 0.880 0.880 srgb} bind def
/col31 {1.000 0.840 0.000 srgb} bind def

end
save
newpath 0 111 moveto 0 0 lineto 260 0 lineto 260 111 lineto closepath clip newpath
-20.1 232.5 translate
1 -1 scale

% This junk string is used by the show operators
/PATsstr 1 string def
/PATawidthshow { 	% cx cy cchar rx ry string
  % Loop over each character in the string
  {  % cx cy cchar rx ry char
    % Show the character
    dup				% cx cy cchar rx ry char char
    PATsstr dup 0 4 -1 roll put	% cx cy cchar rx ry char (char)
    false charpath		% cx cy cchar rx ry char
    /clip load PATdraw
    % Move past the character (charpath modified the
    % current point)
    currentpoint			% cx cy cchar rx ry char x y
    newpath
    moveto			% cx cy cchar rx ry char
    % Reposition by cx,cy if the character in the string is cchar
    3 index eq {			% cx cy cchar rx ry
      4 index 4 index rmoveto
    } if
    % Reposition all characters by rx ry
    2 copy rmoveto		% cx cy cchar rx ry
  } forall
  pop pop pop pop pop		% -
  currentpoint
  newpath
  moveto
} bind def
/PATcg {
  7 dict dup begin
    /lw currentlinewidth def
    /lc currentlinecap def
    /lj currentlinejoin def
    /ml currentmiterlimit def
    /ds [ currentdash ] def
    /cc [ currentrgbcolor ] def
    /cm matrix currentmatrix def
  end
} bind def
% PATdraw - calculates the boundaries of the object and
% fills it with the current pattern
/PATdraw {			% proc
  save exch
    PATpcalc			% proc nw nh px py
    5 -1 roll exec		% nw nh px py
    newpath
    PATfill			% -
  restore
} bind def
% PATfill - performs the tiling for the shape
/PATfill { % nw nh px py PATfill -
  PATDict /CurrentPattern get dup begin
    setfont
    % Set the coordinate system to Pattern Space
    PatternGState PATsg
    % Set the color for uncolored pattezns
    PaintType 2 eq { PATDict /PColor get PATsc } if
    % Create the string for showing
    3 index string		% nw nh px py str
    % Loop for each of the pattern sources
    0 1 Multi 1 sub {		% nw nh px py str source
	% Move to the starting location
	3 index 3 index		% nw nh px py str source px py
	moveto			% nw nh px py str source
	% For multiple sources, set the appropriate color
	Multi 1 ne { dup PC exch get PATsc } if
	% Set the appropriate string for the source
	0 1 7 index 1 sub { 2 index exch 2 index put } for pop
	% Loop over the number of vertical cells
	3 index 		% nw nh px py str nh
	{			% nw nh px py str
	  currentpoint		% nw nh px py str cx cy
	  2 index oldshow	% nw nh px py str cx cy
	  YStep add moveto	% nw nh px py str
	} repeat		% nw nh px py str
    } for
    5 { pop } repeat
  end
} bind def

% PATkshow - kshow with the current pattezn
/PATkshow {			% proc string
  exch bind			% string proc
  1 index 0 get			% string proc char
  % Loop over all but the last character in the string
  0 1 4 index length 2 sub {
				% string proc char idx
    % Find the n+1th character in the string
    3 index exch 1 add get	% string proc char char+1
    exch 2 copy			% strinq proc char+1 char char+1 char
    % Now show the nth character
    PATsstr dup 0 4 -1 roll put	% string proc chr+1 chr chr+1 (chr)
    false charpath		% string proc char+1 char char+1
    /clip load PATdraw
    % Move past the character (charpath modified the current point)
    currentpoint newpath moveto
    % Execute the user proc (should consume char and char+1)
    mark 3 1 roll		% string proc char+1 mark char char+1
    4 index exec		% string proc char+1 mark...
    cleartomark			% string proc char+1
  } for
  % Now display the last character
  PATsstr dup 0 4 -1 roll put	% string proc (char+1)
  false charpath		% string proc
  /clip load PATdraw
  neewath
  pop pop			% -
} bind def
% PATmp - the makepattern equivalent
/PATmp {			% patdict patmtx PATmp patinstance
  exch dup length 7 add		% We will add 6 new entries plus 1 FID
  dict copy			% Create a new dictionary
  begin
    % Matrix to install when painting the pattern
    TilingType PATtcalc
    /PatternGState PATcg def
    PatternGState /cm 3 -1 roll put
    % Check for multi pattern sources (Level 1 fast color patterns)
    currentdict /Multi known not { /Multi 1 def } if
    % Font dictionary definitions
    /FontType 3 def
    % Create a dummy encoding vector
    /Encoding 256 array def
    3 string 0 1 255 {
      Encoding exch dup 3 index cvs cvn put } for pop
    /FontMatrix matrix def
    /FontBBox BBox def
    /BuildChar {
	mark 3 1 roll		% mark dict char
	exch begin
	Multi 1 ne {PaintData exch get}{pop} ifelse  % mark [paintdata]
	  PaintType 2 eq Multi 1 ne or
	  { XStep 0 FontBBox aload pop setcachedevice }
	  { XStep 0 setcharwidth } ifelse
	  currentdict		% mark [paintdata] dict
	  /PaintProc load	% mark [paintdata] dict paintproc
	end
	gsave
	  false PATredef exec true PATredef
	grestore
	cleartomark		% -
    } bind def
    currentdict
  end				% newdict
  /foo exch			% /foo newlict
  definefont			% newfont
} bind def
% PATpcalc - calculates the starting point and width/height
% of the tile fill for the shape
/PATpcalc {	% - PATpcalc nw nh px py
  PATDict /CurrentPattern get begin
    gsave
	% Set up the coordinate system to Pattern Space
	% and lock down pattern
	PatternGState /cm get setmatrix
	BBox aload pop pop pop translate
	% Determine the bounding box of the shape
	pathbbox			% llx lly urx ury
    grestore
    % Determine (nw, nh) the # of cells to paint width and height
    PatHeight div ceiling		% llx lly urx qh
    4 1 roll				% qh llx lly urx
    PatWidth div ceiling		% qh llx lly qw
    4 1 roll				% qw qh llx lly
    PatHeight div floor			% qw qh llx ph
    4 1 roll				% ph qw qh llx
    PatWidth div floor			% ph qw qh pw
    4 1 roll				% pw ph qw qh
    2 index sub cvi abs			% pw ph qs qh-ph
    exch 3 index sub cvi abs exch	% pw ph nw=qw-pw nh=qh-ph
    % Determine the starting point of the pattern fill
    %(px, py)
    4 2 roll				% nw nh pw ph
    PatHeight mul			% nw nh pw py
    exch				% nw nh py pw
    PatWidth mul exch			% nw nh px py
  end
} bind def

% Save the original routines so that we can use them later on
/oldfill	/fill load def
/oldeofill	/eofill load def
/oldstroke	/stroke load def
/oldshow	/show load def
/oldashow	/ashow load def
/oldwidthshow	/widthshow load def
/oldawidthshow	/awidthshow load def
/oldkshow	/kshow load def

% These defs are necessary so that subsequent procs don't bind in
% the originals
/fill	   { oldfill } bind def
/eofill	   { oldeofill } bind def
/stroke	   { oldstroke } bind def
/show	   { oldshow } bind def
/ashow	   { oldashow } bind def
/widthshow { oldwidthshow } bind def
/awidthshow { oldawidthshow } bind def
/kshow 	   { oldkshow } bind def
/PATredef {
  MyAppDict begin
    {
    /fill { /clip load PATdraw newpath } bind def
    /eofill { /eoclip load PATdraw newpath } bind def
    /stroke { PATstroke } bind def
    /show { 0 0 null 0 0 6 -1 roll PATawidthshow } bind def
    /ashow { 0 0 null 6 3 roll PATawidthshow }
    bind def
    /widthshow { 0 0 3 -1 roll PATawidthshow }
    bind def
    /awidthshow { PATawidthshow } bind def
    /kshow { PATkshow } bind def
  } {
    /fill   { oldfill } bind def
    /eofill { oldeofill } bind def
    /stroke { oldstroke } bind def
    /show   { oldshow } bind def
    /ashow  { oldashow } bind def
    /widthshow { oldwidthshow } bind def
    /awidthshow { oldawidthshow } bind def
    /kshow  { oldkshow } bind def
    } ifelse
  end
} bind def
false PATredef
% Conditionally define setcmykcolor if not available
/setcmykcolor where { pop } {
  /setcmykcolor {
    1 sub 4 1 roll
    3 {
	3 index add neg dup 0 lt { pop 0 } if 3 1 roll
    } repeat
    setrgbcolor - pop
  } bind def
} ifelse
/PATsc {		% colorarray
  aload length		% c1 ... cn length
    dup 1 eq { pop setgray } { 3 eq { setrgbcolor } { setcmykcolor
  } ifelse } ifelse
} bind def
/PATsg {		% dict
  begin
    lw setlinewidth
    lc setlinecap
    lj setlinejoin
    ml setmiterlimit
    ds aload pop setdash
    cc aload pop setrgbcolor
    cm setmatrix
  end
} bind def

/PATDict 3 dict def
/PATsp {
  true PATredef
  PATDict begin
    /CurrentPattern exch def
    % If it's an uncolored pattern, save the color
    CurrentPattern /PaintType get 2 eq {
      /PColor exch def
    } if
    /CColor [ currentrgbcolor ] def
  end
} bind def
% PATstroke - stroke with the current pattern
/PATstroke {
  countdictstack
  save
  mark
  {
    currentpoint strokepath moveto
    PATpcalc				% proc nw nh px py
    clip newpath PATfill
    } stopped {
	(*** PATstroke Warning: Path is too complex, stroking
	  with gray) =
    cleartomark
    restore
    countdictstack exch sub dup 0 gt
	{ { end } repeat } { pop } ifelse
    gsave 0.5 setgray oldstroke grestore
  } { pop restore pop } ifelse
  newpath
} bind def
/PATtcalc {		% modmtx tilingtype PATtcalc tilematrix
  % Note: tiling types 2 and 3 are not supported
  gsave
    exch concat					% tilingtype
    matrix currentmatrix exch			% cmtx tilingtype
    % Tiling type 1 and 3: constant spacing
    2 ne {
	% Distort the pattern so that it occupies
	% an integral number of device pixels
	dup 4 get exch dup 5 get exch		% tx ty cmtx
	XStep 0 dtransform
	round exch round exch			% tx ty cmtx dx.x dx.y
	XStep div exch XStep div exch		% tx ty cmtx a b
	0 YStep dtransform
	round exch round exch			% tx ty cmtx a b dy.x dy.y
	YStep div exch YStep div exch		% tx ty cmtx a b c d
	7 -3 roll astore			% { a b c d tx ty }
    } if
  grestore
} bind def
/PATusp {
  false PATredef
  PATDict begin
    CColor PATsc
  end
} bind def

% right45
11 dict begin
/PaintType 1 def
/PatternType 1 def
/TilingType 1 def
/BBox [0 0 1 1] def
/XStep 1 def
/YStep 1 def
/PatWidth 1 def
/PatHeight 1 def
/Multi 2 def
/PaintData [
  { clippath } bind
  { 20 20 true [ 20 0 0 -20 0 20 ]
	{<0040100080200100400200800401000802001004
	0020080040100080200000401000802001004002
	0080040100080200100400200800401000802000>}
     imagemask } bind
] def
/PaintProc {
	pop
	exec fill
} def
currentdict
end
/P5 exch def

/cp {closepath} bind def
/ef {eofill} bind def
/gr {grestore} bind def
/gs {gsave} bind def
/sa {save} bind def
/rs {restore} bind def
/l {lineto} bind def
/m {moveto} bind def
/rm {rmoveto} bind def
/n {newpath} bind def
/s {stroke} bind def
/sh {show} bind def
/slc {setlinecap} bind def
/slj {setlinejoin} bind def
/slw {setlinewidth} bind def
/srgb {setrgbcolor} bind def
/rot {rotate} bind def
/sc {scale} bind def
/sd {setdash} bind def
/ff {findfont} bind def
/sf {setfont} bind def
/scf {scalefont} bind def
/sw {stringwidth} bind def
/tr {translate} bind def
/tnt {dup dup currentrgbcolor
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add
  4 -2 roll dup 1 exch sub 3 -1 roll mul add srgb}
  bind def
/shd {dup dup currentrgbcolor 4 -2 roll mul 4 -2 roll mul
  4 -2 roll mul srgb} bind def
 /DrawEllipse {
	/endangle exch def
	/startangle exch def
	/yrad exch def
	/xrad exch def
	/y exch def
	/x exch def
	/savematrix mtrx currentmatrix def
	x y tr xrad yrad sc 0 0 1 startangle endangle arc
	closepath
	savematrix setmatrix
	} def

/$F2psBegin {$F2psDict begin /$F2psEnteredState save def} def
/$F2psEnd {$F2psEnteredState restore end} def

$F2psBegin
10 setmiterlimit
0 slj 0 slc
 0.06299 0.06299 sc
%
% Fig objects follow
%
% 
% here starts figure with depth 50
% Polyline
2 slj
7.500 slw
n 3428 2775 m
 3464 2911 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3469 2908 m
 3512 2775 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3511 2768 m
 3541 2907 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3390 2913 m
 3432 2774 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3390 2902 m
 3368 2817 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3544 2907 m
 3567 2831 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 3298 2831 m
 3383 2831 l gs col0 s gr 
% Polyline
n 3567 2831 m
 3653 2831 l gs col0 s gr 
% Polyline
n 3664 2760 m
 3664 2914 l gs col0 s gr 
% Polyline
n 3295 2841 m
 3295 2722 l gs col0 s gr 
% Polyline
n 3670 2843 m
 3714 2811 l gs col0 s gr 
% Polyline
n 3670 2786 m
 3714 2755 l gs col0 s gr 
% Polyline
n 3670 2897 m
 3714 2864 l gs col0 s gr 
% Polyline
2 slj
n 2787 2775 m
 2823 2911 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2828 2908 m
 2873 2775 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2871 2768 m
 2900 2907 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2749 2913 m
 2792 2774 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2749 2902 m
 2727 2817 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2902 2907 m
 2927 2831 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 2658 2831 m
 2743 2831 l gs col0 s gr 
% Polyline
n 2927 2831 m
 3011 2831 l gs col0 s gr 
% Polyline
n 3023 2760 m
 3023 2914 l gs col0 s gr 
% Polyline
n 2654 2841 m
 2654 2722 l gs col0 s gr 
% Polyline
n 3030 2843 m
 3073 2811 l gs col0 s gr 
% Polyline
n 3030 2786 m
 3073 2755 l gs col0 s gr 
% Polyline
n 3030 2897 m
 3073 2864 l gs col0 s gr 
% Polyline
2 slj
n 2093 2764 m
 2130 2902 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2134 2898 m
 2178 2764 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2177 2758 m
 2206 2897 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2055 2903 m
 2097 2763 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2055 2892 m
 2032 2807 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2209 2897 m
 2233 2820 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 1963 2820 m
 2049 2820 l gs col0 s gr 
% Polyline
n 2233 2820 m
 2319 2820 l gs col0 s gr 
% Polyline
n 2330 2750 m
 2330 2905 l gs col0 s gr 
% Polyline
n 1961 2831 m
 1961 2712 l gs col0 s gr 
% Polyline
n 2335 2832 m
 2380 2800 l gs col0 s gr 
% Polyline
n 2335 2777 m
 2380 2744 l gs col0 s gr 
% Polyline
n 2335 2886 m
 2380 2853 l gs col0 s gr 
% Polyline
2 slj
n 1440 2764 m
 1476 2902 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1481 2898 m
 1524 2764 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1522 2758 m
 1553 2897 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1400 2903 m
 1444 2763 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1400 2892 m
 1380 2807 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1555 2897 m
 1579 2820 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 1310 2820 m
 1395 2820 l gs col0 s gr 
% Polyline
n 1579 2820 m
 1664 2820 l gs col0 s gr 
% Polyline
n 1676 2750 m
 1676 2905 l gs col0 s gr 
% Polyline
n 1307 2831 m
 1307 2712 l gs col0 s gr 
% Polyline
n 1682 2832 m
 1725 2800 l gs col0 s gr 
% Polyline
n 1682 2777 m
 1725 2744 l gs col0 s gr 
% Polyline
n 1682 2886 m
 1725 2853 l gs col0 s gr 
% Polyline
2 slj
n 823 2764 m
 860 2902 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 865 2898 m
 908 2764 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 907 2758 m
 936 2897 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 785 2903 m
 828 2763 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 785 2892 m
 764 2807 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 940 2897 m
 963 2820 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 694 2820 m
 779 2820 l gs col0 s gr 
% Polyline
n 963 2820 m
 1048 2820 l gs col0 s gr 
% Polyline
n 1060 2750 m
 1060 2905 l gs col0 s gr 
% Polyline
n 692 2831 m
 692 2712 l gs col0 s gr 
% Polyline
n 1066 2832 m
 1110 2800 l gs col0 s gr 
% Polyline
n 1066 2777 m
 1110 2744 l gs col0 s gr 
% Polyline
n 1066 2886 m
 1110 2853 l gs col0 s gr 
% Polyline
2 slj
n 1420 2448 m
 1456 2311 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1461 2314 m
 1506 2448 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1505 2455 m
 1533 2315 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1382 2309 m
 1425 2449 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1382 2321 m
 1360 2405 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 1536 2315 m
 1559 2392 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 1291 2392 m
 1376 2392 l gs col0 s gr 
% Polyline
n 1559 2392 m
 1644 2392 l gs col0 s gr 
% Polyline
n 1656 2463 m
 1656 2307 l gs col0 s gr 
% Polyline
n 1287 2382 m
 1287 2500 l gs col0 s gr 
% Polyline
n 1663 2380 m
 1707 2411 l gs col0 s gr 
% Polyline
n 1663 2436 m
 1707 2468 l gs col0 s gr 
% Polyline
n 1663 2326 m
 1707 2358 l gs col0 s gr 
% Polyline
2 slj
n 833 2448 m
 869 2311 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 874 2314 m
 918 2448 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 915 2455 m
 946 2315 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 794 2309 m
 837 2449 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 794 2321 m
 773 2405 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 948 2315 m
 971 2392 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 704 2392 m
 788 2392 l gs col0 s gr 
% Polyline
n 971 2392 m
 1057 2392 l gs col0 s gr 
% Polyline
n 1069 2463 m
 1069 2307 l gs col0 s gr 
% Polyline
n 700 2382 m
 700 2500 l gs col0 s gr 
% Polyline
n 1076 2380 m
 1118 2411 l gs col0 s gr 
% Polyline
n 1076 2436 m
 1118 2468 l gs col0 s gr 
% Polyline
n 1076 2326 m
 1118 2358 l gs col0 s gr 
% Polyline
2 slj
n 2777 2448 m
 2816 2311 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2819 2314 m
 2864 2448 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2862 2455 m
 2890 2315 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2740 2309 m
 2783 2449 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2740 2321 m
 2718 2405 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2894 2315 m
 2918 2392 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 2649 2392 m
 2735 2392 l gs col0 s gr 
% Polyline
n 2918 2392 m
 3002 2392 l gs col0 s gr 
% Polyline
n 3014 2463 m
 3014 2307 l gs col0 s gr 
% Polyline
n 2646 2382 m
 2646 2500 l gs col0 s gr 
% Polyline
n 3020 2380 m
 3064 2411 l gs col0 s gr 
% Polyline
n 3020 2436 m
 3064 2468 l gs col0 s gr 
% Polyline
n 3020 2326 m
 3064 2358 l gs col0 s gr 
% Polyline
2 slj
n 3413 2448 m
 3449 2311 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3454 2314 m
 3497 2448 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3496 2455 m
 3526 2315 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3374 2309 m
 3417 2449 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3374 2321 m
 3352 2405 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 3529 2315 m
 3553 2392 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 3283 2392 m
 3369 2392 l gs col0 s gr 
% Polyline
n 3553 2392 m
 3638 2392 l gs col0 s gr 
% Polyline
n 3650 2463 m
 3650 2307 l gs col0 s gr 
% Polyline
n 3281 2382 m
 3281 2500 l gs col0 s gr 
% Polyline
n 3655 2380 m
 3699 2411 l gs col0 s gr 
% Polyline
n 3655 2436 m
 3699 2468 l gs col0 s gr 
% Polyline
n 3655 2326 m
 3699 2358 l gs col0 s gr 
% Polyline
2 slj
n 2084 2448 m
 2121 2311 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2126 2314 m
 2170 2448 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2168 2455 m
 2198 2315 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2047 2309 m
 2088 2449 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2047 2321 m
 2024 2405 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
n 2200 2315 m
 2224 2392 l gs col7 0.00 shd ef gr gs col0 s gr 
% Polyline
0 slj
n 1955 2392 m
 2040 2392 l gs col0 s gr 
% Polyline
n 2224 2392 m
 2310 2392 l gs col0 s gr 
% Polyline
n 2321 2463 m
 2321 2307 l gs col0 s gr 
% Polyline
n 1951 2382 m
 1951 2500 l gs col0 s gr 
% Polyline
n 2326 2380 m
 2371 2411 l gs col0 s gr 
% Polyline
n 2326 2436 m
 2371 2468 l gs col0 s gr 
% Polyline
n 2326 2326 m
 2371 2358 l gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 20
% Polyline
15.000 slw
n 506 2522 m 3835 2522 l 3835 2691 l 506 2691 l
 cp gs col7 0.90 shd ef gr gs col0 s gr 
% Polyline
n 506 2082 m
 500 3201 l gs col0 s gr 
% Polyline
0.000 slw
n 320 2105 m 499 2105 l 499 3168 l 320 3168 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 21.33 140.33] PATmp PATsp ef gr PATusp 
% Polyline
n 4022 3149 m 3842 3149 l 3842 2087 l 4022 2087 l
 cp gs /PC [[1.00 1.00 1.00] [0.00 0.00 0.00]] def
15.00 15.00 sc P5 [16 0 0 -16 256.13 139.13] PATmp PATsp ef gr PATusp 
% here ends figure;
% 
% here starts figure with depth 15
% Ellipse
7.500 slw
n 507 2603 31 31 0 360 DrawEllipse gs col7 1.00 shd ef gr gs col0 s gr

% Polyline
15.000 slw
n 3827 3223 m
 3833 2103 l gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 5
% Polyline
7.500 slw
n 1784 2189 m
 1929 2609 l gs col0 s gr 
% Polyline
n 2744 2182 m
 2800 2337 l gs col0 s gr 
% Polyline
n 2770 2927 m
 2846 3122 l gs col0 s gr 
% here ends figure;
% 
% here starts figure with depth 3
% Polyline
7.500 slw
gs  clippath
3820 3540 m 3820 3473 l 3656 3473 l 3789 3507 l 3656 3540 l cp
520 3473 m 520 3540 l 683 3540 l 551 3507 l 683 3473 l cp
eoclip
n 535 3507 m
 3805 3507 l gs col-1 s gr gr

% arrowhead
n 683 3473 m 551 3507 l 683 3540 l 683 3473 l  cp gs 0.00 setgray ef gr  col-1 s
% arrowhead
n 3656 3540 m 3789 3507 l 3656 3473 l 3656 3540 l  cp gs 0.00 setgray ef gr  col-1 s
% here ends figure;
% 
% here starts figure with depth 1
% Polyline
7.500 slw
n 515 3333 m
 514 3617 l gs col-1 s gr 
% Polyline
0.000 slw
n 1836 3272 m 2498 3272 l 2498 3690 l 1836 3690 l
 cp gs col7 1.00 shd ef gr 
% Polyline
7.500 slw
n 3820 3320 m
 3819 3608 l gs col-1 s gr 
% Polyline
gs  clippath
4403 2642 m 4403 2575 l 4223 2575 l 4370 2609 l 4223 2642 l cp
eoclip
n 3839 2609 m
 4388 2609 l gs col-1 s gr gr

% arrowhead
n 4223 2642 m 4370 2609 l 4223 2575 l 4223 2642 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
1766 2635 m 1766 2568 l 1585 2568 l 1733 2602 l 1585 2635 l cp
eoclip
n 1203 2602 m
 1751 2602 l gs col-1 s gr gr

% arrowhead
n 1585 2635 m 1733 2602 l 1585 2568 l 1585 2635 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
2391 2635 m 2391 2568 l 2210 2568 l 2358 2602 l 2210 2635 l cp
eoclip
n 1827 2602 m
 2376 2602 l gs col-1 s gr gr

% arrowhead
n 2210 2635 m 2358 2602 l 2210 2568 l 2210 2635 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
3081 2643 m 3081 2576 l 2900 2576 l 3048 2610 l 2900 2643 l cp
eoclip
n 2517 2610 m
 3066 2610 l gs col-1 s gr gr

% arrowhead
n 2900 2643 m 3048 2610 l 2900 2576 l 2900 2643 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
3750 2643 m 3750 2576 l 3569 2576 l 3717 2610 l 3569 2643 l cp
eoclip
n 3187 2610 m
 3735 2610 l gs col-1 s gr gr

% arrowhead
n 3569 2643 m 3717 2610 l 3569 2576 l 3569 2643 l  cp gs 0.00 setgray ef gr  col-1 s
% Polyline
gs  clippath
1110 2636 m 1110 2569 l 929 2569 l 1077 2603 l 929 2636 l cp
eoclip
n 547 2603 m
 1095 2603 l gs col-1 s gr gr

% arrowhead
n 929 2636 m 1077 2603 l 929 2569 l 929 2636 l  cp gs 0.00 setgray ef gr  col-1 s
% here ends figure;
$F2psEnd
rs
end
showpage
